### Type definitions saved at 2019-10-23T11:49:02.293Z ###

type PloneSite implements Node @dontInfer {
  description: String
  is_folderish: Boolean
  items: [PloneSiteItems]
  items_total: Int
  title: String
  _path: String
  _components: PloneSite_components
  _id: String
  _type: String
  nodes: [PloneDocumentPloneFolderPloneLRFUnion] @link(by: "id", from: "nodes___NODE")
  _backlinks: [String]
}

type PloneSiteItems {
  description: String
  review_state: String
  title: String
  _path: String
  _id: String
  _type: String
}

type PloneSite_components {
  actions: PloneSite_componentsActions
  breadcrumbs: PloneSite_componentsBreadcrumbs
  navigation: PloneSite_componentsNavigation
}

type PloneSite_componentsActions {
  _path: String
  _id: String
}

type PloneSite_componentsBreadcrumbs {
  _path: String
  _id: String
}

type PloneSite_componentsNavigation {
  items: [PloneSite_componentsNavigationItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderPloneSiteUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneSite_componentsNavigationItems {
  description: String
  title: String
  _path: String
  _id: String
}

union PloneDocumentPloneFolderPloneSiteUnion = PloneDocument | PloneFolder | PloneSite

union PloneDocumentPloneFolderPloneLRFUnion = PloneDocument | PloneFolder | PloneLRF

type PloneBreadcrumbs implements Node @dontInfer {
  items: [PloneBreadcrumbsItems]
  _path: String
  _id: String
  nodes: [PloneCollectionPloneDocumentPloneEventPloneFilePloneFolderPloneImagePloneLIFPloneNewsItemUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneBreadcrumbsItems {
  title: String
  _path: String
  _id: String
}

union PloneCollectionPloneDocumentPloneEventPloneFilePloneFolderPloneImagePloneLIFPloneNewsItemUnion = PloneCollection | PloneDocument | PloneEvent | PloneFile | PloneFolder | PloneImage | PloneLIF | PloneNewsItem

type PloneNavigation implements Node @dontInfer {
  items: [PloneNavigationItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderPloneLRFPloneSiteUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneNavigationItems {
  description: String
  title: String
  _path: String
  _id: String
}

union PloneDocumentPloneFolderPloneLRFPloneSiteUnion = PloneDocument | PloneFolder | PloneLRF | PloneSite

type PloneFolder implements Node @dontInfer {
  UID: String
  allow_discussion: Boolean
  created: Date @dateformat
  creators: [String]
  description: String
  effective: Date @dateformat
  exclude_from_nav: Boolean
  image: File @link(by: "id", from: "image___NODE")
  is_folderish: Boolean
  items: [PloneFolderItems]
  items_total: Int
  layout: String
  modified: Date @dateformat
  nextPreviousEnabled: Boolean
  review_state: String
  title: String
  version: String
  _path: String
  _components: PloneFolder_components
  _id: String
  _type: String
  nodes: [PloneCollectionPloneDocumentPloneEventPloneFilePloneImagePloneNewsItemUnion] @link(by: "id", from: "nodes___NODE")
  _parent: PloneFolder_parent
  _backlinks: [String]
}

type File implements Node @dontInfer {
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  sourceInstanceName: String
  absolutePath: String
  relativePath: String
  extension: String
  size: Int
  prettySize: String
  modifiedTime: Date @dateformat
  accessTime: Date @dateformat
  changeTime: Date @dateformat
  birthTime: Date @dateformat
  root: String
  dir: String
  base: String
  ext: String
  name: String
  relativeDirectory: String
  dev: Int
  mode: Int
  nlink: Int
  uid: Int
  gid: Int
  rdev: Int
  blksize: Int
  ino: Int
  blocks: Int
  atimeMs: Float
  mtimeMs: Float
  ctimeMs: Float
  atime: Date @dateformat
  mtime: Date @dateformat
  ctime: Date @dateformat
  url: String
  content_type: String @proxy(from: "content-type")
  download: String
  filename: String
  height: Int
  scales: FileScales
  width: Int
}

type FileScales {
  icon: FileScalesIcon
  large: FileScalesLarge
  listing: FileScalesListing
  mini: FileScalesMini
  preview: FileScalesPreview
  thumb: FileScalesThumb
  tile: FileScalesTile
}

type FileScalesIcon {
  download: String
  height: Int
  width: Int
}

type FileScalesLarge {
  download: String
  height: Int
  width: Int
}

type FileScalesListing {
  download: String
  height: Int
  width: Int
}

type FileScalesMini {
  download: String
  height: Int
  width: Int
}

type FileScalesPreview {
  download: String
  height: Int
  width: Int
}

type FileScalesThumb {
  download: String
  height: Int
  width: Int
}

type FileScalesTile {
  download: String
  height: Int
  width: Int
}

type PloneFolderItems {
  description: String
  review_state: String
  title: String
  _path: String
  _id: String
  _type: String
}

type PloneFolder_components {
  actions: PloneFolder_componentsActions
  breadcrumbs: PloneFolder_componentsBreadcrumbs
  navigation: PloneFolder_componentsNavigation
  translations: PloneFolder_componentsTranslations
  types: PloneFolder_componentsTypes
  workflow: PloneFolder_componentsWorkflow
}

type PloneFolder_componentsActions {
  _path: String
  _id: String
}

type PloneFolder_componentsBreadcrumbs {
  items: [PloneFolder_componentsBreadcrumbsItems]
  _path: String
  _id: String
  nodes: [PloneFolder] @link(by: "id", from: "nodes___NODE")
}

type PloneFolder_componentsBreadcrumbsItems {
  title: String
  _path: String
  _id: String
}

type PloneFolder_componentsNavigation {
  items: [PloneFolder_componentsNavigationItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderPloneLRFPloneSiteUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneFolder_componentsNavigationItems {
  description: String
  title: String
  _path: String
  _id: String
}

type PloneFolder_componentsTranslations {
  _path: String
  _id: String
}

type PloneFolder_componentsTypes {
  _path: String
  _id: String
}

type PloneFolder_componentsWorkflow {
  _path: String
  _id: String
}

union PloneCollectionPloneDocumentPloneEventPloneFilePloneImagePloneNewsItemUnion = PloneCollection | PloneDocument | PloneEvent | PloneFile | PloneImage | PloneNewsItem

type PloneFolder_parent {
  description: String
  title: String
  _path: String
  _id: String
  _type: String
  review_state: String
}

type PloneCollection implements Node @dontInfer {
  UID: String
  allow_discussion: Boolean
  created: Date @dateformat
  creators: [String]
  customViewFields: [PloneCollectionCustomViewFields]
  description: String
  effective: Date @dateformat
  exclude_from_nav: Boolean
  is_folderish: Boolean
  item_count: Int
  items: [PloneCollectionItems]
  items_total: Int
  language: String
  layout: String
  limit: Int
  modified: Date @dateformat
  review_state: String
  sort_reversed: Boolean
  text: PloneCollectionText
  title: String
  version: String
  _path: String
  _components: PloneCollection_components
  _id: String
  _type: String
  nodes: [PloneDocument] @link(by: "id", from: "nodes___NODE")
  _parent: PloneCollection_parent
  _backlinks: [String]
}

type PloneCollectionCustomViewFields {
  title: String
  token: String
}

type PloneCollectionItems {
  description: String
  review_state: String
  title: String
  _path: String
  _id: String
  _type: String
}

type PloneCollectionText {
  content_type: String @proxy(from: "content-type")
  data: String
  encoding: String
  react: String
}

type PloneCollection_components {
  actions: PloneCollection_componentsActions
  breadcrumbs: PloneCollection_componentsBreadcrumbs
  navigation: PloneCollection_componentsNavigation
  translations: PloneCollection_componentsTranslations
  types: PloneCollection_componentsTypes
  workflow: PloneCollection_componentsWorkflow
}

type PloneCollection_componentsActions {
  _path: String
  _id: String
}

type PloneCollection_componentsBreadcrumbs {
  items: [PloneCollection_componentsBreadcrumbsItems]
  _path: String
  _id: String
  nodes: [PloneCollectionPloneFolderUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneCollection_componentsBreadcrumbsItems {
  title: String
  _path: String
  _id: String
}

union PloneCollectionPloneFolderUnion = PloneCollection | PloneFolder

type PloneCollection_componentsNavigation {
  items: [PloneCollection_componentsNavigationItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderPloneSiteUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneCollection_componentsNavigationItems {
  description: String
  title: String
  _path: String
  _id: String
}

type PloneCollection_componentsTranslations {
  _path: String
  _id: String
}

type PloneCollection_componentsTypes {
  _path: String
  _id: String
}

type PloneCollection_componentsWorkflow {
  _path: String
  _id: String
}

type PloneDocument implements Node @dontInfer {
  UID: String
  allow_discussion: Boolean
  changeNote: String
  content: String
  created: Date @dateformat
  creators: [String]
  customContentLayout: String
  description: String
  effective: Date @dateformat
  exclude_from_nav: Boolean
  image: File @link(by: "id", from: "image___NODE")
  is_folderish: Boolean
  layout: String
  modified: Date @dateformat
  review_state: String
  rights: String
  table_of_contents: Boolean
  text: PloneDocumentText
  title: String
  version: String
  versioning_enabled: Boolean
  _path: String
  _components: PloneDocument_components
  _id: String
  _type: String
  _parent: PloneDocument_parent
  _backlinks: [String]
}

type PloneDocumentText {
  content_type: String @proxy(from: "content-type")
  data: String
  encoding: String
  react: String
}

type PloneDocument_components {
  actions: PloneDocument_componentsActions
  breadcrumbs: PloneDocument_componentsBreadcrumbs
  navigation: PloneDocument_componentsNavigation
  translations: PloneDocument_componentsTranslations
  types: PloneDocument_componentsTypes
  workflow: PloneDocument_componentsWorkflow
}

type PloneDocument_componentsActions {
  _path: String
  _id: String
}

type PloneDocument_componentsBreadcrumbs {
  items: [PloneDocument_componentsBreadcrumbsItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneDocument_componentsBreadcrumbsItems {
  title: String
  _path: String
  _id: String
}

union PloneDocumentPloneFolderUnion = PloneDocument | PloneFolder

type PloneDocument_componentsNavigation {
  items: [PloneDocument_componentsNavigationItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderPloneLRFPloneSiteUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneDocument_componentsNavigationItems {
  description: String
  title: String
  _path: String
  _id: String
}

type PloneDocument_componentsTranslations {
  _path: String
  _id: String
}

type PloneDocument_componentsTypes {
  _path: String
  _id: String
}

type PloneDocument_componentsWorkflow {
  _path: String
  _id: String
}

type PloneDocument_parent {
  description: String
  review_state: String
  title: String
  _path: String
  _id: String
  _type: String
}

type PloneCollection_parent {
  description: String
  review_state: String
  title: String
  _path: String
  _id: String
  _type: String
}

type PloneNewsItem implements Node @dontInfer {
  UID: String
  allow_discussion: Boolean
  changeNote: String
  created: Date @dateformat
  creators: [String]
  description: String
  effective: Date @dateformat
  exclude_from_nav: Boolean
  image: File @link(by: "id", from: "image___NODE")
  is_folderish: Boolean
  language: String
  layout: String
  modified: Date @dateformat
  review_state: String
  text: PloneNewsItemText
  title: String
  version: String
  versioning_enabled: Boolean
  _path: String
  _components: PloneNewsItem_components
  _id: String
  _type: String
  _parent: PloneNewsItem_parent
  _backlinks: [String]
}

type PloneNewsItemText {
  content_type: String @proxy(from: "content-type")
  data: String
  encoding: String
  react: String
}

type PloneNewsItem_components {
  actions: PloneNewsItem_componentsActions
  breadcrumbs: PloneNewsItem_componentsBreadcrumbs
  navigation: PloneNewsItem_componentsNavigation
  translations: PloneNewsItem_componentsTranslations
  types: PloneNewsItem_componentsTypes
  workflow: PloneNewsItem_componentsWorkflow
}

type PloneNewsItem_componentsActions {
  _path: String
  _id: String
}

type PloneNewsItem_componentsBreadcrumbs {
  items: [PloneNewsItem_componentsBreadcrumbsItems]
  _path: String
  _id: String
  nodes: [PloneFolderPloneNewsItemUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneNewsItem_componentsBreadcrumbsItems {
  title: String
  _path: String
  _id: String
}

union PloneFolderPloneNewsItemUnion = PloneFolder | PloneNewsItem

type PloneNewsItem_componentsNavigation {
  items: [PloneNewsItem_componentsNavigationItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderPloneSiteUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneNewsItem_componentsNavigationItems {
  description: String
  title: String
  _path: String
  _id: String
}

type PloneNewsItem_componentsTranslations {
  _path: String
  _id: String
}

type PloneNewsItem_componentsTypes {
  _path: String
  _id: String
}

type PloneNewsItem_componentsWorkflow {
  _path: String
  _id: String
}

type PloneNewsItem_parent {
  description: String
  review_state: String
  title: String
  _path: String
  _id: String
  _type: String
}

type PloneEvent implements Node @dontInfer {
  UID: String
  allow_discussion: Boolean
  changeNote: String
  created: Date @dateformat
  creators: [String]
  description: String
  effective: Date @dateformat
  end: Date @dateformat
  exclude_from_nav: Boolean
  is_folderish: Boolean
  language: String
  layout: String
  modified: Date @dateformat
  open_end: Boolean
  review_state: String
  start: Date @dateformat
  text: PloneEventText
  title: String
  version: String
  versioning_enabled: Boolean
  whole_day: Boolean
  _path: String
  _components: PloneEvent_components
  _id: String
  _type: String
  _parent: PloneEvent_parent
  _backlinks: [String]
}

type PloneEventText {
  content_type: String @proxy(from: "content-type")
  data: String
  encoding: String
  react: String
}

type PloneEvent_components {
  actions: PloneEvent_componentsActions
  breadcrumbs: PloneEvent_componentsBreadcrumbs
  navigation: PloneEvent_componentsNavigation
  translations: PloneEvent_componentsTranslations
  types: PloneEvent_componentsTypes
  workflow: PloneEvent_componentsWorkflow
}

type PloneEvent_componentsActions {
  _path: String
  _id: String
}

type PloneEvent_componentsBreadcrumbs {
  items: [PloneEvent_componentsBreadcrumbsItems]
  _path: String
  _id: String
  nodes: [PloneEventPloneFolderUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneEvent_componentsBreadcrumbsItems {
  title: String
  _path: String
  _id: String
}

union PloneEventPloneFolderUnion = PloneEvent | PloneFolder

type PloneEvent_componentsNavigation {
  items: [PloneEvent_componentsNavigationItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderPloneSiteUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneEvent_componentsNavigationItems {
  description: String
  title: String
  _path: String
  _id: String
}

type PloneEvent_componentsTranslations {
  _path: String
  _id: String
}

type PloneEvent_componentsTypes {
  _path: String
  _id: String
}

type PloneEvent_componentsWorkflow {
  _path: String
  _id: String
}

type PloneEvent_parent {
  description: String
  review_state: String
  title: String
  _path: String
  _id: String
  _type: String
}

type PloneImage implements Node @dontInfer {
  UID: String
  allow_discussion: Boolean
  created: Date @dateformat
  creators: [String]
  description: String
  exclude_from_nav: Boolean
  image: File @link(by: "id", from: "image___NODE")
  is_folderish: Boolean
  language: String
  layout: String
  modified: Date @dateformat
  title: String
  version: String
  _path: String
  _components: PloneImage_components
  _id: String
  _type: String
  _parent: PloneImage_parent
  _backlinks: [String]
}

type PloneImage_components {
  actions: PloneImage_componentsActions
  breadcrumbs: PloneImage_componentsBreadcrumbs
  navigation: PloneImage_componentsNavigation
  translations: PloneImage_componentsTranslations
  types: PloneImage_componentsTypes
  workflow: PloneImage_componentsWorkflow
}

type PloneImage_componentsActions {
  _path: String
  _id: String
}

type PloneImage_componentsBreadcrumbs {
  items: [PloneImage_componentsBreadcrumbsItems]
  _path: String
  _id: String
  nodes: [PloneFolderPloneImageUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneImage_componentsBreadcrumbsItems {
  title: String
  _path: String
  _id: String
}

union PloneFolderPloneImageUnion = PloneFolder | PloneImage

type PloneImage_componentsNavigation {
  items: [PloneImage_componentsNavigationItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderPloneSiteUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneImage_componentsNavigationItems {
  description: String
  title: String
  _path: String
  _id: String
}

type PloneImage_componentsTranslations {
  _path: String
  _id: String
}

type PloneImage_componentsTypes {
  _path: String
  _id: String
}

type PloneImage_componentsWorkflow {
  _path: String
  _id: String
}

type PloneImage_parent {
  description: String
  review_state: String
  title: String
  _path: String
  _id: String
  _type: String
}

type PloneFile implements Node @dontInfer {
  UID: String
  allow_discussion: Boolean
  created: Date @dateformat
  creators: [String]
  description: String
  exclude_from_nav: Boolean
  file: File @link(by: "id", from: "file___NODE")
  is_folderish: Boolean
  language: String
  layout: String
  modified: Date @dateformat
  title: String
  version: String
  _path: String
  _components: PloneFile_components
  _id: String
  _type: String
  _parent: PloneFile_parent
  _backlinks: [String]
}

type PloneFile_components {
  actions: PloneFile_componentsActions
  breadcrumbs: PloneFile_componentsBreadcrumbs
  navigation: PloneFile_componentsNavigation
  translations: PloneFile_componentsTranslations
  types: PloneFile_componentsTypes
  workflow: PloneFile_componentsWorkflow
}

type PloneFile_componentsActions {
  _path: String
  _id: String
}

type PloneFile_componentsBreadcrumbs {
  items: [PloneFile_componentsBreadcrumbsItems]
  _path: String
  _id: String
  nodes: [PloneFilePloneFolderUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneFile_componentsBreadcrumbsItems {
  title: String
  _path: String
  _id: String
}

union PloneFilePloneFolderUnion = PloneFile | PloneFolder

type PloneFile_componentsNavigation {
  items: [PloneFile_componentsNavigationItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderPloneSiteUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneFile_componentsNavigationItems {
  description: String
  title: String
  _path: String
  _id: String
}

type PloneFile_componentsTranslations {
  _path: String
  _id: String
}

type PloneFile_componentsTypes {
  _path: String
  _id: String
}

type PloneFile_componentsWorkflow {
  _path: String
  _id: String
}

type PloneFile_parent {
  description: String
  review_state: String
  title: String
  _path: String
  _id: String
  _type: String
}

type PloneLRF implements Node @dontInfer {
  UID: String
  allow_discussion: Boolean
  created: Date @dateformat
  creators: [String]
  description: String
  exclude_from_nav: Boolean
  is_folderish: Boolean
  items: [PloneLRFItems]
  items_total: Int
  language: PloneLRFLanguage
  layout: String
  modified: Date @dateformat
  review_state: String
  title: String
  version: String
  _path: String
  _components: PloneLRF_components
  _id: String
  _type: String
  nodes: [PloneDocumentPloneFolderPloneLIFUnion] @link(by: "id", from: "nodes___NODE")
  _parent: PloneLRF_parent
  _backlinks: [String]
}

type PloneLRFItems {
  description: String
  review_state: String
  title: String
  _path: String
  _id: String
  _type: String
}

type PloneLRFLanguage {
  title: String
  token: String
}

type PloneLRF_components {
  actions: PloneLRF_componentsActions
  breadcrumbs: PloneLRF_componentsBreadcrumbs
  navigation: PloneLRF_componentsNavigation
  translations: PloneLRF_componentsTranslations
  types: PloneLRF_componentsTypes
  workflow: PloneLRF_componentsWorkflow
}

type PloneLRF_componentsActions {
  _path: String
  _id: String
}

type PloneLRF_componentsBreadcrumbs {
  _path: String
  _id: String
}

type PloneLRF_componentsNavigation {
  items: [PloneLRF_componentsNavigationItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderPloneLRFUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneLRF_componentsNavigationItems {
  description: String
  title: String
  _path: String
  _id: String
}

type PloneLRF_componentsTranslations {
  _path: String
  _id: String
}

type PloneLRF_componentsTypes {
  _path: String
  _id: String
}

type PloneLRF_componentsWorkflow {
  _path: String
  _id: String
}

union PloneDocumentPloneFolderPloneLIFUnion = PloneDocument | PloneFolder | PloneLIF

type PloneLRF_parent {
  description: String
  title: String
  _path: String
  _id: String
  _type: String
}

type PloneLIF implements Node @dontInfer {
  UID: String
  allow_discussion: Boolean
  created: Date @dateformat
  creators: [String]
  description: String
  exclude_from_nav: Boolean
  is_folderish: Boolean
  items_total: Int
  language: PloneLIFLanguage
  layout: String
  modified: Date @dateformat
  review_state: String
  rights: String
  title: String
  version: String
  _path: String
  _components: PloneLIF_components
  _id: String
  _type: String
  _parent: PloneLIF_parent
  _backlinks: [String]
}

type PloneLIFLanguage {
  title: String
  token: String
}

type PloneLIF_components {
  actions: PloneLIF_componentsActions
  breadcrumbs: PloneLIF_componentsBreadcrumbs
  navigation: PloneLIF_componentsNavigation
  translations: PloneLIF_componentsTranslations
  types: PloneLIF_componentsTypes
  workflow: PloneLIF_componentsWorkflow
}

type PloneLIF_componentsActions {
  _path: String
  _id: String
}

type PloneLIF_componentsBreadcrumbs {
  items: [PloneLIF_componentsBreadcrumbsItems]
  _path: String
  _id: String
  nodes: [PloneLIF] @link(by: "id", from: "nodes___NODE")
}

type PloneLIF_componentsBreadcrumbsItems {
  title: String
  _path: String
  _id: String
}

type PloneLIF_componentsNavigation {
  items: [PloneLIF_componentsNavigationItems]
  _path: String
  _id: String
  nodes: [PloneDocumentPloneFolderPloneLRFUnion] @link(by: "id", from: "nodes___NODE")
}

type PloneLIF_componentsNavigationItems {
  description: String
  title: String
  _path: String
  _id: String
}

type PloneLIF_componentsTranslations {
  _path: String
  _id: String
}

type PloneLIF_componentsTypes {
  _path: String
  _id: String
}

type PloneLIF_componentsWorkflow {
  _path: String
  _id: String
}

type PloneLIF_parent {
  description: String
  review_state: String
  title: String
  _path: String
  _id: String
  _type: String
}